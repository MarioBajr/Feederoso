<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		creationComplete="onCreationComplete(event)"
		>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			
			import puremvc.ApplicationFacade;
			import puremvc.mediator.UserInfoMediator;
			
			import qnx.ui.buttons.Button;
			import qnx.ui.listClasses.ListSelectionMode;
			import qnx.ui.listClasses.SectionList;
			import qnx.ui.skins.buttons.BackButtonSkinBlack;
			import qnx.ui.skins.listClasses.SectionListHeaderSkinBlack;
			import qnx.ui.text.Label;
			
			import views.cells.SubscriptionCell;
			
			public var subscriptionsSectionList:SectionList;
			public var logoutButton:Button;
			public var userLabel:Label;
			
			private const MARGIN:uint = 5;
			
			private function onCreationComplete(event:FlexEvent):void
			{
				this.subscriptionsSectionList = new SectionList();
				this.subscriptionsSectionList.headerHeight = 40;
				this.subscriptionsSectionList.allowDeselect = false;
				this.subscriptionsSectionList.setSkin(SubscriptionCell);
				this.subscriptionsSectionList.selectionMode = ListSelectionMode.SINGLE;
				this.visualID.addChild( this.subscriptionsSectionList );
				
				this.logoutButton = new Button();
				this.logoutButton.setSkin(BackButtonSkinBlack);
				this.logoutButton.setSize( 42, 40 );
				this.logoutToolbarID.addChild( this.logoutButton );
				
				var textFormat:TextFormat = new TextFormat();
				textFormat.align = TextFormatAlign.CENTER;
				
				this.userLabel = new Label();
				this.userLabel.x = MARGIN;
				this.userLabel.y = MARGIN;
				this.userLabel.format = textFormat;
				this.nameToolbarID.addChild( this.userLabel );
				
				this.addEventListener(FlexEvent.UPDATE_COMPLETE, onUpdateComplete);
				this.onUpdateComplete(null);
				
				//Register Application Mediator
				ApplicationFacade.getInstance().registerMediator( new UserInfoMediator( this ) );
			}
			
			private function onUpdateComplete(event:FlexEvent):void
			{
				this.subscriptionsSectionList.width = visualID.width;
				this.subscriptionsSectionList.height = visualID.height;
				
				this.userLabel.width = nameToolbarID.width - 2*MARGIN;
				this.userLabel.height = nameToolbarID.height;
			}
			
		]]>
	</fx:Script>
	
	<s:Group width="100%" height="40">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="0xCCCCCC"/>
			</s:fill>
		</s:Rect>
		<s:HGroup width="100%" height="100%">
			<s:SpriteVisualElement id="logoutToolbarID" width="20%" height="100%"/>
			<s:SpriteVisualElement id="nameToolbarID" width="100%" height="100%"/>
		</s:HGroup>
	</s:Group>
	<s:SpriteVisualElement id="visualID" width="100%" height="100%"/>
</s:VGroup>
